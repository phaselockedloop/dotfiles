#compdef rg

# zsh completions for 'rg'
# automatically generated with http://github.com/RobSis/zsh-completion-generator
local arguments

arguments=(
  {-e,--regexp}'[A pattern to search for. This option can be provided multiple times]'
  {-f,--file}'[search for patterns from the given file, with one pattern per line.]'
  '-e[/--regexp flag, then all patterns provided are searched. Empty]'
  '--pre[for each input PATH, this flag causes ripgrep to search the standard]'
  '--pre-glob[this flag works in conjunction with the --pre flag. Namely, when one or]'
  {-z,--search-zip}'[this flag instructs ripgrep to search in compressed files. Currently]'
  {-s,--case-sensitive}'[execute the search case sensitively. This is the default mode.]'
  '--crlf[when enabled, ripgrep will treat CRLF (\r\n) as a line terminator]'
  '--dfa-size-limit[+SUFFIX?]'
  {-E,--encoding}'[specify the text encoding that ripgrep will use on all files searched.]'
  '--engine[specify which regular expression engine to use. When you choose a regex]'
  {-F,--fixed-strings}'[treat all patterns as literals instead of as regular expressions. When]'
  {-i,--ignore-case}'[when this flag is provided, all patterns will be searched case]'
  {-v,--invert-match}'[this flag inverts matching. That is, instead of printing lines that]'
  {-x,--line-regexp}'[when enabled, ripgrep will only show matches surrounded by line]'
  {-m,--max-count}'[limit the number of matching lines per file searched to NUM.]'
  '--mmap[when enabled, ripgrep will search using memory maps when possible. This]'
  {-U,--multiline}'[this flag enable searching across multiple lines.]'
  '--multiline-dotall[may be passed to make the "dot all" behavior]'
  '--multiline-dotall[this flag enables "dot all" mode in all regex patterns. This causes .]'
  '-U[/--multiline flag.]'
  '--no-unicode[this flag disables Unicode mode for all patterns given to ripgrep.]'
  '--null-data[enabling this flag causes ripgrep to use NUL as a line terminator]'
  {-P,--pcre2}'[when this flag is present, ripgrep will use the PCRE2 regex engine]'
  '--regex-size-limit[+SUFFIX?]'
  {-S,--smart-case}'[this flag instructs ripgrep to searches case insensitively if the]'
  '--stop-on-nonmatch[enabling this option will cause ripgrep to stop reading a file once it]'
  {-a,--text}'[this flag instructs ripgrep to search binary files as if they were]'
  {-j,--threads}'[this flag sets the approximate number of threads to use. A value of 0]'
  {-w,--word-regexp}'[when enabled, ripgrep will only show matches surrounded by word]'
  '--auto-hybrid-regex[DEPRECATED. Use --engine instead.]'
  '--no-pcre2-unicode[DEPRECATED. Use --no-unicode instead.]'
  '--binary[enabling this flag will cause ripgrep to search binary files. By]'
  {-L,--follow}'[this flag instructs ripgrep to follow symbolic links while traversing]'
  {-g,--glob}'[include or exclude files and directories for searching that match the]'
  '--glob-case-insensitive[process all glob patterns given with the -g/--glob flag case]'
  '--iglob[include or exclude files and directories for searching that match the]'
  '--ignore-file[specifies a path to one or more gitignore formatted rules files. These]'
  '--ignore-file-case-insensitive[process ignore files (.gitignore, .ignore, etc.) case insensitively.]'
  {-d,--max-depth}'[this flag limits the depth of directory traversal to NUM levels beyond]'
  '--max-filesize[+SUFFIX?]'
  '--no-ignore[when set, ignore files such as .gitignore, .ignore and .rgignore will]'
  {--no-ignore-global,--no-ignore-parent,--no-ignore-vcs}'[.]'
  '--no-ignore-dot[dont respect filter rules from .ignore or .rgignore files.]'
  '--no-ignore-exclude[dont respect filter rules from files that are manually configured for]'
  '--no-ignore-files[when set, any --ignore-file flags, even ones that come after this flag]'
  '--no-ignore-global[dont respect filter rules from ignore files that come from "global"]'
  '--no-ignore-parent[when this flag is set, filter rules from ignore files found in parent]'
  '--no-ignore-vcs[when given, filter rules from source control ignore files (e.g.]'
  '--no-require-git[when this flag is given, source control ignore files such as .gitignore]'
  '--one-file-system[when enabled, ripgrep will not cross file system boundaries relative to]'
  {-t,--type}'[this flag limits ripgrep to searching files matching TYPE. Multiple]'
  '-t[/--type flags may be provided.]'
  '-t[/--type was provided for every file type supported by ripgrep]'
  {-T,--type-not}'[do not search files matching TYPE. Multiple -T/--type-not flags may be]'
  '-T[/--type-not was provided for every file type supported by ripgrep]'
  '--type-not[causes ripgrep to search in "blacklist" mode, where it]'
  '--type-add[this flag adds a new glob for a particular file type. Only one glob can]'
  '--type-clear[used, globs are added to any existing globs defined]'
  '--type-add[py,md]'
  '--type-add[py,md --type-add src:*.foo]'
  '--type-clear[clear the file type globs previously defined for TYPE. This clears any]'
  {-u,--unrestricted}'[this flag reduces the level of "smart" filtering. Repeated uses (up to]'
  '-u[/--unrestricted flags is equivalent to --no-ignore -./--hidden. Three]'
  '-u[/--unrestricted flags is equivalent to --no-ignore -./--hidden]'
  '--binary[.]'
  {-A,--after-context}'[show NUM lines after each match.]'
  '-C[/--context flag.]'
  {-B,--before-context}'[show NUM lines before each match.]'
  '-C[/--context flag.]'
  '--block-buffered[when enabled, ripgrep will use block buffering. That is, whenever a]'
  {-b,--byte-offset}'[print the 0-based byte offset within the input file before each line of]'
  '--color[this flag controls when to use colors. The default setting is auto]'
  {--vimgrep,--json}'[.]'
  '--column[show column numbers (1-based). This only shows the column numbers for]'
  {-C,--context}'[show NUM lines before and after each match. This is equivalent to]'
  '-B[/--before-context flags both partially override this flag, regardless]'
  '--context-separator[the string used to separate non-contiguous context lines in the output.]'
  '-A[/--after-context, -B/--before-context or -C/--context). Escape]'
  '--no-context-separator[.]'
  '--field-context-separator[set the field context separator. This separator is only used when]'
  '--field-match-separator[set the field match separator. This separator is only used when]'
  '--heading[this flag prints the file path above clusters of matches from each file]'
  {-h,--help}'[this flag prints the help output for ripgrep.]'
  '--hostname-bin[this flag controls how ripgrep determines this systems hostname. The]'
  '--hyperlink-format[set the format of hyperlinks to use when printing results. Hyperlinks]'
  '--no-line-number[given), then it is automatically replaced with the]'
  '--include-zero[when used with -c/--count or --count-matches, this causes ripgrep to]'
  '--line-buffered[when enabled, ripgrep will always use line buffering. That is, whenever]'
  {-n,--line-number}'[show line numbers (1-based).]'
  {-N,--no-line-number}'[suppress line numbers.]'
  {-M,--max-columns}'[when given, ripgrep will omit lines longer than this limit in bytes.]'
  '--max-columns-preview[prints a preview for lines exceeding the configured max column limit.]'
  '-M[/--max-columns, a preview of the line (corresponding to the limit]'
  {-0,--null}'[whenever a file path is printed, follow it with a NUL byte. This]'
  '--files[. This option is useful for use with xargs.]'
  {-o,--only-matching}'[print only the matched (non-empty) parts of a matching line, with each]'
  '--path-separator[set the path separator to use when printing file paths. This defaults]'
  '--passthru[print both matching and non-matching lines.]'
  '-B[/--before-context flags.]'
  {-p,--pretty}'[this is a convenience alias for --color=always --heading --line-number.]'
  {-q,--quiet}'[do not print anything to stdout. If a match is found in a file, then]'
  {-r,--replace}'[replaces every match with the text given when printing results. Neither]'
  '--sort[this flag enables sorting of results in ascending order. The possible]'
  '--sortr[this flag enables sorting of results in descending order. The possible]'
  '--trim[when set, all ASCII whitespace at the beginning of each line printed]'
  '--vimgrep[this flag instructs ripgrep to print results with every match on its]'
  {-H,--with-filename}'[this flag instructs ripgrep to print the file path for each matching]'
  '--heading[enabled (the default when printing to a tty), the file]'
  {-I,--no-filename}'[this flag instructs ripgrep to never print the file path with each]'
  '--sort-files[DEPRECATED. Use --sort=path instead.]'
  {-c,--count}'[this flag suppresses normal output and shows the number of lines that]'
  '-U[/--multiline is enabled, this reports the number of lines that match]'
  '--count-matches[given.]'
  '--count-matches[this flag suppresses normal output and shows the number of individual]'
  '--count-matches[given.]'
  {-l,--files-with-matches}'[print only the paths with at least one match and suppress match]'
  '--files-without-match[print the paths that contain zero matches and suppress match contents.]'
  '--json[enable printing results in a JSON Lines format.]'
  '-o[/--only-matching, --heading, -r/--replace, -M/--max-columns, etc.]'
  '--debug[show debug messages. Please use this when filing a bug report.]'
  '--debug[with additional trace data.]'
  '--no-ignore-messages[when this flag is enabled, all error messages related to parsing ignore]'
  '--no-messages[this flag suppresses some error messages. Specifically, messages]'
  '--stats[when enabled, ripgrep will print aggregate statistics about the search.]'
  '--trace[show trace messages. This shows even more detail than the --debug flag.]'
  '--files[print each file that would be searched without actually performing the]'
  '--generate[this flag instructs ripgrep to generate some special kind of output]'
  '--no-config[when set, ripgrep will never read configuration files. When this flag]'
  '--pcre2-version[when this flag is present, ripgrep will print the version of PCRE2 in]'
  '--type-list[show all supported file types and their corresponding globs. This takes]'
  {-V,--version}'[this flag prints ripgreps version. This also may print other relevant]'
  '*:filename:_files'
)

_arguments -s $arguments
